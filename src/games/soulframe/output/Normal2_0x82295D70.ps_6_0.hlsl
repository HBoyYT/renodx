#include "../common.hlsl"
#include "../shared.h"

Texture2D<float4> t0 : register(t0);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t2 : register(t2);

Texture3D<float4> t3 : register(t3);

Texture2D<float4> t15 : register(t15);

Texture2D<float4> t8 : register(t8);

Texture2D<float4> t6 : register(t6);

Texture2D<float4> t11 : register(t11);

Texture2D<float4> t12 : register(t12);

cbuffer cb0 : register(b0) {
  float cb0_003x : packoffset(c003.x);
  float cb0_003y : packoffset(c003.y);
  float cb0_003z : packoffset(c003.z);
  float cb0_003w : packoffset(c003.w);
  float cb0_015x : packoffset(c015.x);
  float cb0_015y : packoffset(c015.y);
  float cb0_015z : packoffset(c015.z);
  float cb0_015w : packoffset(c015.w);
  float cb0_016x : packoffset(c016.x);
  float cb0_017x : packoffset(c017.x);
  float cb0_025x : packoffset(c025.x);
  float cb0_025y : packoffset(c025.y);
  float cb0_026x : packoffset(c026.x);
  float cb0_026y : packoffset(c026.y);
  float cb0_031x : packoffset(c031.x);
  float cb0_031y : packoffset(c031.y);
  float cb0_034x : packoffset(c034.x);
  float cb0_040x : packoffset(c040.x);
  float cb0_041x : packoffset(c041.x);
};

SamplerState s0 : register(s0);

SamplerState s1 : register(s1);

SamplerState s2 : register(s2);

SamplerState s3 : register(s3);

SamplerState s15 : register(s15);

SamplerState s8 : register(s8);

SamplerState s6 : register(s6);

SamplerState s11 : register(s11);

SamplerState s12 : register(s12);

float4 main(
  noperspective float4 SV_Position : SV_Position,
  linear float4 TEXCOORD : TEXCOORD,
  linear float4 TEXCOORD_1 : TEXCOORD1
) : SV_Target {
  float4 SV_Target;
  float cb0_003x = RENODX_FX_BLOOM_STRENGTH * 0.1f;
  float cb0_003y = RENODX_FX_BLOOM_STRENGTH * 0.1f;
  float cb0_003z = RENODX_FX_BLOOM_STRENGTH * 0.1f;
  float cb0_003w = RENODX_FX_BLOOM_STRENGTH * 0.1f;
  float _27 = (TEXCOORD.x + -0.5f) * 2.0f;
  float _28 = (TEXCOORD.y + -0.5f) * 1.5f;
  float _33 = (1.0f - (cb0_041x * dot(float2(_27, _28), float2(_27, _28)))) + (cb0_041x * 1.600000023841858f);
  float _36 = (_27 / _33) * 0.5f;
  float _37 = (_28 / _33) * 0.6666666865348816f;
  float _38 = _36 + 0.5f;
  float _39 = _37 + 0.5f;
  float _46 = cb0_031x * _38;
  float _47 = cb0_031y * _39;
  float _48 = min(_46, cb0_025x);
  float _49 = min(_47, cb0_025y);
  float4 _50 = t15.SampleLevel(s15, float2(_48, _49), 0.0f);
  float _62 = ((cb0_015x * 32.0f) * cb0_015z) * ((_50.x * 2.0f) + -1.0f);
  float _66 = (cb0_015w * cb0_015y) * (32.0f - (_50.y * 64.0f));
  float _69 = (_62 + _38) * cb0_015z;
  float _70 = (_66 + _39) * cb0_015w;
  float4 _75 = t0.SampleLevel(s0, float2(max(0.0f, min(_69, cb0_025x)), max(0.0f, min(_70, cb0_025y))), 0.0f);
  float4 _81 = t6.SampleLevel(s6, float2(max(0.0f, _48), max(0.0f, _49)), 0.0f);
  float _84 = saturate(1.0f - _81.x);
  float _85 = dot(float3(_75.x, _75.y, _75.z), float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
  float _94 = sqrt((_37 * _37) + (_36 * _36));
  float _99 = cb0_017x * ((_94 * _94) + _81.x) * RENODX_FX_CA_STRENGTH;
  float _102 = cb0_017x * 50.0f;
  float _106 = ((_102 * _62) + (_99 * _36)) * cb0_015x;
  float _108 = ((_102 * _66) + (_99 * _37)) * cb0_015y;
  float4 _116 = t0.SampleLevel(s0, float2(max(0.0f, min((_69 - _106), cb0_025x)), max(0.0f, min((_70 - _108), cb0_025y))), 0.0f);
  float _120 = dot(float3(_116.x, _116.y, _116.z), float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
  float _121 = _120 * 0.7307692766189575f;
  float4 _141 = t0.SampleLevel(s0, float2(max(0.0f, min((_106 + _69), cb0_025x)), max(0.0f, min((_108 + _70), cb0_025y))), 0.0f);
  float _145 = dot(float3(_141.x, _141.y, _141.z), float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
  float _147 = _145 * 0.7692307829856873f;
  float _170 = (((((((_75.x - (_85 * 0.7307692766189575f)) + _141.x) - (_145 * 0.7307692766189575f)) * _84) + ((_145 + _85) * 0.7307692766189575f)) * 0.05000000074505806f) + ((lerp(_121, _116.x, _84)) * 0.8999999761581421f)) * TEXCOORD_1.w;
  float _171 = ((((_145 + _120) + ((((_116.y - _120) - _145) + _141.y) * _84)) * 0.05000000074505806f) + ((lerp(_85, _75.y, _84)) * 0.8999999761581421f)) * TEXCOORD_1.w;
  float _172 = (((lerp(_147, _141.z, _84)) * 0.8999999761581421f) + ((((((_75.z - (_85 * 0.7692307829856873f)) + _116.z) - (_120 * 0.7692307829856873f)) * _84) + ((_120 + _85) * 0.7692307829856873f)) * 0.05000000074505806f)) * TEXCOORD_1.w;
  float _178 = max(0.0f, min(_46, cb0_026x));
  float _179 = max(0.0f, min(_47, cb0_026y));
  float4 _180 = t2.SampleLevel(s2, float2(_178, _179), 0.0f);
  float _184 = abs((_180.x + -0.5f) * 2.0f);
  float4 _185 = t1.SampleLevel(s1, float2(_178, _179), 0.0f);
  float4 _189 = t11.SampleLevel(s11, float2(_178, _179), 0.0f);
  float _193 = dot(float3(_185.x, _185.y, _185.z), float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
  float _195 = saturate(_84 + 0.75f);
  float _199 = _193 * 1.461538553237915f;
  float _200 = _193 * 2.0f;
  float _201 = _193 * 1.5384615659713745f;
  float4 _211 = t12.SampleLevel(s12, float2(_48, _49), 0.0f);
  float _219 = (_211.x * _211.x) + (_81.x * 0.3400000035762787f);
  float _223 = saturate(_219 + cb0_003x);
  float _224 = saturate(_219 + cb0_003y);
  float _225 = saturate(_219 + cb0_003z);
  float _232 = ((0.2549999952316284f - _223) * _184) + _223;
  float _233 = ((0.2549999952316284f - _224) * _184) + _224;
  float _234 = ((0.2549999952316284f - _225) * _184) + _225;
  float _242 = (1.0f - (saturate((dot(float3(_232, _233, _234), float3(0.3333333432674408f, 0.3333333432674408f, 0.3333333432674408f)) + -0.15000000596046448f) * 6.666666507720947f) * 0.800000011920929f)) * cb0_003w;
  float _261 = cb0_015x / cb0_015y;
  float _272 = RENODX_FX_VIGNETTE_STRENGTH * cb0_040x * (1.4142135381698608f / sqrt((_261 * _261) + 1.0f));
  float _273 = _272 * ((TEXCOORD.x * 2.0f) + -1.0f);
  float _275 = (_261 * ((TEXCOORD.y * 2.0f) + -1.0f)) * _272;
  float _278 = 1.0f / (dot(float2(_273, _275), float2(_273, _275)) + 1.0f);
  float _280 = (_278 * _278) * 0.009999999776482582f;
  float _290 = exp2(log2(_280 * (((((((((_185.x * 1.5f) - _199) * _195) + _199) + (_242 * _189.x)) * 0.20000000298023224f) - _170) * _232) + _170)) * 0.1593017578125f);
  float _291 = exp2(log2(_280 * (((((((((_185.y * 1.5f) - _200) * _195) + _200) + (_242 * _189.y)) * 0.20000000298023224f) - _171) * _233) + _171)) * 0.1593017578125f);
  float _292 = exp2(log2(_280 * (((((((((_185.z * 1.5f) - _201) * _195) + _201) + (_242 * _189.z)) * 0.20000000298023224f) - _172) * _234) + _172)) * 0.1593017578125f);
  float4 _323 = t3.Sample(s3, float3(((exp2(log2(((_290 * 18.8515625f) + 0.8359375f) / ((_290 * 18.6875f) + 1.0f)) * 78.84375f) * 0.9696969985961914f) + 0.01515151560306549f), ((exp2(log2(((_291 * 18.8515625f) + 0.8359375f) / ((_291 * 18.6875f) + 1.0f)) * 78.84375f) * 0.9696969985961914f) + 0.01515151560306549f), ((exp2(log2(((_292 * 18.8515625f) + 0.8359375f) / ((_292 * 18.6875f) + 1.0f)) * 78.84375f) * 0.9696969985961914f) + 0.01515151560306549f)));
  float4 _536 = t8.Sample(s8, float2(TEXCOORD.x, TEXCOORD.y));
  if (!RENODX_FIX_COLOR) {
    float _335 = (pow(_323.x, 0.012683313339948654f));
    float _336 = (pow(_323.y, 0.012683313339948654f));
    float _337 = (pow(_323.z, 0.012683313339948654f));
    float _365 = (exp2(log2(max((_335 + -0.8359375f), 0.0f) / (18.8515625f - (_335 * 18.6875f))) * 6.277394771575928f) * 10000.0f) / cb0_034x;
    float _366 = (exp2(log2(max((_336 + -0.8359375f), 0.0f) / (18.8515625f - (_336 * 18.6875f))) * 6.277394771575928f) * 10000.0f) / cb0_034x;
    float _367 = (exp2(log2(max((_337 + -0.8359375f), 0.0f) / (18.8515625f - (_337 * 18.6875f))) * 6.277394771575928f) * 10000.0f) / cb0_034x;
    float _370 = mad(_367, -0.07283999770879745f, mad(_366, -0.5876560211181641f, (_365 * 1.6604959964752197f)));
    float _373 = mad(_367, -0.00834800023585558f, mad(_366, 1.1328949928283691f, (_365 * -0.12454699724912643f)));
    float _376 = mad(_367, 1.118751049041748f, mad(_366, -0.10059700161218643f, (_365 * -0.018154000863432884f)));
    float _398 = select((_370 <= 0.0031308000907301903f), (_370 * 12.920000076293945f), (((pow(_370, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f));
    float _399 = select((_373 <= 0.0031308000907301903f), (_373 * 12.920000076293945f), (((pow(_373, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f));
    float _400 = select((_376 <= 0.0031308000907301903f), (_376 * 12.920000076293945f), (((pow(_376, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f));
    float _404 = cb0_016x * 0.0009765625f;
    float _408 = frac(abs(_404));
    float _414 = frac(TEXCOORD.x * 5.39870023727417f);
    float _415 = frac(TEXCOORD.y * 5.4421000480651855f);
    float _416 = frac(select((_404 >= (-0.0f - _404)), _408, (-0.0f - _408)) * 7103.59033203125f);
    float _420 = dot(float3(_415, _416, _414), float3((_414 + 21.53510093688965f), (_415 + 14.313699722290039f), (_416 + 15.324700355529785f)));
    float _421 = _420 + _414;
    float _422 = _420 + _415;
    float _423 = _420 + _416;
    float _424 = _421 * _422;
    float _436 = frac(_424 * 97.59010314941406f) + -0.5f;
    float _437 = frac((_423 * 93.83689880371094f) * _421) + -0.5f;
    float _463 = (((frac(_424 * 95.43070220947266f) + -0.5f) + ((select((_398 < 0.0019607844296842813f), 0.0f, 1.0f) * select((_398 > 0.998039186000824f), 0.0f, 1.0f)) * _436)) * 0.003921568859368563f) + _398;
    float _464 = ((((select((_399 < 0.0019607844296842813f), 0.0f, 1.0f) * select((_399 > 0.998039186000824f), 0.0f, 1.0f)) * _437) + _436) * 0.003921568859368563f) + _399;
    float _465 = ((((select((_400 < 0.0019607844296842813f), 0.0f, 1.0f) * select((_400 > 0.998039186000824f), 0.0f, 1.0f)) * (frac((_423 * 91.69309997558594f) * _422) + -0.5f)) + _437) * 0.003921568859368563f) + _400;
    float _487 = select((_463 <= 0.0392800010740757f), (_463 * 0.07739938050508499f), exp2(log2((_463 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
    float _488 = select((_464 <= 0.0392800010740757f), (_464 * 0.07739938050508499f), exp2(log2((_464 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
    float _489 = select((_465 <= 0.0392800010740757f), (_465 * 0.07739938050508499f), exp2(log2((_465 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
    float _499 = cb0_034x * 9.999999747378752e-05f;
    float _509 = exp2(log2(mad(0.04331360012292862f, _489, mad(0.3292819857597351f, _488, (_487 * 0.627403974533081f))) * _499) * 0.1593017578125f);
    float _510 = exp2(log2(mad(0.012477199546992779f, _489, mad(0.9417769908905029f, _488, (_487 * 0.045745600014925f))) * _499) * 0.1593017578125f);
    float _511 = exp2(log2(mad(0.9836069941520691f, _489, mad(0.017604099586606026f, _488, (_487 * -0.0012105499627068639f))) * _499) * 0.1593017578125f);
    float _533 = exp2(log2(((_509 * 18.8515625f) + 0.8359375f) / ((_509 * 18.6875f) + 1.0f)) * 78.84375f);
    float _534 = exp2(log2(((_510 * 18.8515625f) + 0.8359375f) / ((_510 * 18.6875f) + 1.0f)) * 78.84375f);
    float _535 = exp2(log2(((_511 * 18.8515625f) + 0.8359375f) / ((_511 * 18.6875f) + 1.0f)) * 78.84375f);
    float _692;
    float _693;
    float _694;
    [branch]
    if (!(_536.w < 9.999999747378752e-05f)) {
      float _545 = cb0_034x * 9.999999747378752e-05f;
      float _552 = (pow(_533, 0.012683313339948654f));
      float _553 = (pow(_534, 0.012683313339948654f));
      float _554 = (pow(_535, 0.012683313339948654f));
      float _579 = exp2(log2(max((_552 + -0.8359375f), 0.0f) / (18.8515625f - (_552 * 18.6875f))) * 6.277394771575928f) / _545;
      float _580 = exp2(log2(max((_553 + -0.8359375f), 0.0f) / (18.8515625f - (_553 * 18.6875f))) * 6.277394771575928f) / _545;
      float _581 = exp2(log2(max((_554 + -0.8359375f), 0.0f) / (18.8515625f - (_554 * 18.6875f))) * 6.277394771575928f) / _545;
      float _584 = mad(_581, -0.07283999770879745f, mad(_580, -0.5876560211181641f, (_579 * 1.6604959964752197f)));
      float _587 = mad(_581, -0.00834800023585558f, mad(_580, 1.1328949928283691f, (_579 * -0.12454699724912643f)));
      float _590 = mad(_581, 1.118751049041748f, mad(_580, -0.10059700161218643f, (_579 * -0.018154000863432884f)));
      float _615 = 1.0f - _536.w;
      float _619 = (select((_584 <= 0.0031308000907301903f), (_584 * 12.920000076293945f), (((pow(_584, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f)) * _615) + _536.x;
      float _620 = (select((_587 <= 0.0031308000907301903f), (_587 * 12.920000076293945f), (((pow(_587, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f)) * _615) + _536.y;
      float _621 = (select((_590 <= 0.0031308000907301903f), (_590 * 12.920000076293945f), (((pow(_590, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f)) * _615) + _536.z;
      float _643 = select((_619 <= 0.0392800010740757f), (_619 * 0.07739938050508499f), exp2(log2((_619 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
      float _644 = select((_620 <= 0.0392800010740757f), (_620 * 0.07739938050508499f), exp2(log2((_620 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
      float _645 = select((_621 <= 0.0392800010740757f), (_621 * 0.07739938050508499f), exp2(log2((_621 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
      float _664 = exp2(log2(mad(0.04331360012292862f, _645, mad(0.3292819857597351f, _644, (_643 * 0.627403974533081f))) * _545) * 0.1593017578125f);
      float _665 = exp2(log2(mad(0.012477199546992779f, _645, mad(0.9417769908905029f, _644, (_643 * 0.045745600014925f))) * _545) * 0.1593017578125f);
      float _666 = exp2(log2(mad(0.9836069941520691f, _645, mad(0.017604099586606026f, _644, (_643 * -0.0012105499627068639f))) * _545) * 0.1593017578125f);
      _692 = exp2(log2(((_664 * 18.8515625f) + 0.8359375f) / ((_664 * 18.6875f) + 1.0f)) * 78.84375f);
      _693 = exp2(log2(((_665 * 18.8515625f) + 0.8359375f) / ((_665 * 18.6875f) + 1.0f)) * 78.84375f);
      _694 = exp2(log2(((_666 * 18.8515625f) + 0.8359375f) / ((_666 * 18.6875f) + 1.0f)) * 78.84375f);
    } else {
      _692 = _533;
      _693 = _534;
      _694 = _535;
    }
    SV_Target.x = _692;
    SV_Target.y = _693;
    SV_Target.z = _694;
  } else {
    SV_Target.rgb = BlendUI(_536, ApplyDitheringAndFilmGrain(_323.rgb, TEXCOORD.xy));
  }
  SV_Target.w = dot(_323.rgb, float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
  return SV_Target;
}
