#include "../common.hlsl"
#include "../shared.h"

Texture2D<float4> t0 : register(t0);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t2 : register(t2);

Texture3D<float4> t3 : register(t3);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t7 : register(t7);

Texture2D<float4> t15 : register(t15);

Texture2D<float4> t8 : register(t8);

Texture2D<float4> t6 : register(t6);

Texture2D<float4> t11 : register(t11);

Texture2D<float4> t12 : register(t12);

cbuffer cb0 : register(b0) {
  float cb0_002z : packoffset(c002.z);
  float cb0_002w : packoffset(c002.w);
  float cb0_003x : packoffset(c003.x);
  float cb0_003y : packoffset(c003.y);
  float cb0_003z : packoffset(c003.z);
  float cb0_003w : packoffset(c003.w);
  float cb0_015x : packoffset(c015.x);
  float cb0_015y : packoffset(c015.y);
  float cb0_015z : packoffset(c015.z);
  float cb0_015w : packoffset(c015.w);
  float cb0_016x : packoffset(c016.x);
  float cb0_017x : packoffset(c017.x);
  float cb0_019x : packoffset(c019.x);
  float cb0_019y : packoffset(c019.y);
  float cb0_019z : packoffset(c019.z);
  float cb0_019w : packoffset(c019.w);
  float cb0_020x : packoffset(c020.x);
  float cb0_020y : packoffset(c020.y);
  float cb0_020z : packoffset(c020.z);
  float cb0_025x : packoffset(c025.x);
  float cb0_025y : packoffset(c025.y);
  float cb0_026x : packoffset(c026.x);
  float cb0_026y : packoffset(c026.y);
  float cb0_031x : packoffset(c031.x);
  float cb0_031y : packoffset(c031.y);
  float cb0_034x : packoffset(c034.x);
  float cb0_040x : packoffset(c040.x);
  float cb0_041x : packoffset(c041.x);
};

SamplerState s0 : register(s0);

SamplerState s1 : register(s1);

SamplerState s2 : register(s2);

SamplerState s3 : register(s3);

SamplerState s4 : register(s4);

SamplerState s7 : register(s7);

SamplerState s15 : register(s15);

SamplerState s8 : register(s8);

SamplerState s6 : register(s6);

SamplerState s11 : register(s11);

SamplerState s12 : register(s12);

float4 main(
  noperspective float4 SV_Position : SV_Position,
  linear float4 TEXCOORD : TEXCOORD,
  linear float4 TEXCOORD_1 : TEXCOORD1
) : SV_Target {
  float4 SV_Target;
  float cb0_003x = RENODX_FX_BLOOM_STRENGTH * 0.1f; 
  float cb0_003y = RENODX_FX_BLOOM_STRENGTH * 0.1f; 
  float cb0_003z = RENODX_FX_BLOOM_STRENGTH * 0.1f; 
  float cb0_003w = RENODX_FX_BLOOM_STRENGTH * 0.1f; 
  float _31 = (TEXCOORD.x + -0.5f) * 2.0f;
  float _32 = (TEXCOORD.y + -0.5f) * 1.5f;
  float _37 = (1.0f - (cb0_041x * dot(float2(_31, _32), float2(_31, _32)))) + (cb0_041x * 1.600000023841858f);
  float _40 = (_31 / _37) * 0.5f;
  float _41 = (_32 / _37) * 0.6666666865348816f;
  float _42 = _40 + 0.5f;
  float _43 = _41 + 0.5f;
  float4 _54 = t15.SampleLevel(s15, float2(min((cb0_031x * _42), cb0_025x), min((cb0_031y * _43), cb0_025y)), 0.0f);
  float _66 = ((cb0_015x * 32.0f) * cb0_015z) * ((_54.x * 2.0f) + -1.0f);
  float _70 = (cb0_015w * cb0_015y) * (32.0f - (_54.y * 64.0f));
  float4 _77 = t4.SampleLevel(s4, float2(max(0.0f, min((cb0_015z * _42), cb0_025x)), max(0.0f, min((cb0_015w * _43), cb0_025y))), 0.0f);
  float _89 = saturate((_43 * _43) * cb0_020x);
  float _92 = saturate(select((_77.x <= 9.999999747378752e-06f), 1.0f, ((cb0_002w / (_77.x - cb0_002z)) * 0.009999999776482582f)));
  float _96 = ((_92 * _92) * (1.0f - _89)) + _89;
  float4 _114 = t7.Sample(s7, float2((((cb0_019z * _42) + -0.33399999141693115f) + frac(cb0_016x * cb0_020y)), (((cb0_019w * _43) + -0.6669999957084656f) + frac(cb0_016x * cb0_020z))));
  float4 _133 = t7.Sample(s7, float2(((cb0_019z * _42) - frac(cb0_020y * cb0_016x)), ((cb0_019w * _43) - frac(cb0_020z * cb0_016x))));
  float _156 = (((cb0_019x * _96) * cb0_015x) * cb0_015z) * (((_133.x + _114.x) * 2.0f) + -2.0f);
  float _157 = (((cb0_019y * _96) * cb0_015y) * cb0_015w) * (((_133.y + _114.y) * 2.0f) + -2.0f);
  float _158 = _156 + _42;
  float _159 = _157 + _43;
  float _162 = (_158 + _66) * cb0_015z;
  float _163 = (_159 + _70) * cb0_015w;
  float _167 = _158 * cb0_031x;
  float _168 = _159 * cb0_031y;
  float4 _176 = t0.SampleLevel(s0, float2(max(0.0f, min(_162, cb0_025x)), max(0.0f, min(_163, cb0_025y))), 0.0f);
  float4 _184 = t6.SampleLevel(s6, float2(max(0.0f, min(_167, cb0_025x)), max(0.0f, min(_168, cb0_025y))), 0.0f);
  float _187 = saturate(1.0f - _184.x);
  float _188 = dot(float3(_176.x, _176.y, _176.z), float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
  float _197 = sqrt((_41 * _41) + (_40 * _40));
  float _208 = (((_197 * _197) + _184.x) + (sqrt((_156 * _156) + (_157 * _157)) * 100.0f)) * cb0_017x * RENODX_FX_CA_STRENGTH;
  float _211 = cb0_017x * 50.0f;
  float _215 = ((_208 * _40) + (_211 * _66)) * cb0_015x;
  float _217 = ((_208 * _41) + (_211 * _70)) * cb0_015y;
  float4 _225 = t0.SampleLevel(s0, float2(max(0.0f, min((_162 - _215), cb0_025x)), max(0.0f, min((_163 - _217), cb0_025y))), 0.0f);
  float _229 = dot(float3(_225.x, _225.y, _225.z), float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
  float _230 = _229 * 0.7307692766189575f;
  float4 _250 = t0.SampleLevel(s0, float2(max(0.0f, min((_215 + _162), cb0_025x)), max(0.0f, min((_217 + _163), cb0_025y))), 0.0f);
  float _254 = dot(float3(_250.x, _250.y, _250.z), float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
  float _256 = _254 * 0.7692307829856873f;
  float _279 = (((((((_176.x - (_188 * 0.7307692766189575f)) + _250.x) - (_254 * 0.7307692766189575f)) * _187) + ((_254 + _188) * 0.7307692766189575f)) * 0.05000000074505806f) + ((lerp(_230, _225.x, _187)) * 0.8999999761581421f)) * TEXCOORD_1.w;
  float _280 = ((((_254 + _229) + ((((_225.y - _229) - _254) + _250.y) * _187)) * 0.05000000074505806f) + ((lerp(_188, _176.y, _187)) * 0.8999999761581421f)) * TEXCOORD_1.w;
  float _281 = (((lerp(_256, _250.z, _187)) * 0.8999999761581421f) + ((((((_176.z - (_188 * 0.7692307829856873f)) + _225.z) - (_229 * 0.7692307829856873f)) * _187) + ((_229 + _188) * 0.7692307829856873f)) * 0.05000000074505806f)) * TEXCOORD_1.w;
  float _287 = max(0.0f, min(_167, cb0_026x));
  float _288 = max(0.0f, min(_168, cb0_026y));
  float4 _289 = t2.SampleLevel(s2, float2(_287, _288), 0.0f);
  float _293 = abs((_289.x + -0.5f) * 2.0f);
  float4 _294 = t1.SampleLevel(s1, float2(_287, _288), 0.0f);
  float4 _298 = t11.SampleLevel(s11, float2(_287, _288), 0.0f);
  float _302 = dot(float3(_294.x, _294.y, _294.z), float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
  float _304 = saturate(_187 + 0.75f);
  float _308 = _302 * 1.461538553237915f;
  float _309 = _302 * 2.0f;
  float _310 = _302 * 1.5384615659713745f;
  float4 _324 = t12.SampleLevel(s12, float2(min((cb0_031x * _42), cb0_025x), min((cb0_031y * _43), cb0_025y)), 0.0f);
  float _332 = (_324.x * _324.x) + (_184.x * 0.3400000035762787f);
  float _336 = saturate(_332 + cb0_003x);
  float _337 = saturate(_332 + cb0_003y);
  float _338 = saturate(_332 + cb0_003z);
  float _345 = ((0.2549999952316284f - _336) * _293) + _336;
  float _346 = ((0.2549999952316284f - _337) * _293) + _337;
  float _347 = ((0.2549999952316284f - _338) * _293) + _338;
  float _355 = (1.0f - (saturate((dot(float3(_345, _346, _347), float3(0.3333333432674408f, 0.3333333432674408f, 0.3333333432674408f)) + -0.15000000596046448f) * 6.666666507720947f) * 0.800000011920929f)) * cb0_003w;
  float _374 = cb0_015x / cb0_015y;
  float _385 = RENODX_FX_VIGNETTE_STRENGTH * cb0_040x * (1.4142135381698608f / sqrt((_374 * _374) + 1.0f));
  float _386 = _385 * ((TEXCOORD.x * 2.0f) + -1.0f);
  float _388 = (_374 * ((TEXCOORD.y * 2.0f) + -1.0f)) * _385;
  float _391 = 1.0f / (dot(float2(_386, _388), float2(_386, _388)) + 1.0f);
  float _393 = (_391 * _391) * 0.009999999776482582f;
  float _403 = exp2(log2(_393 * (((((((((_294.x * 1.5f) - _308) * _304) + _308) + (_355 * _298.x)) * 0.20000000298023224f) - _279) * _345) + _279)) * 0.1593017578125f);
  float _404 = exp2(log2(_393 * (((((((((_294.y * 1.5f) - _309) * _304) + _309) + (_355 * _298.y)) * 0.20000000298023224f) - _280) * _346) + _280)) * 0.1593017578125f);
  float _405 = exp2(log2(_393 * (((((((((_294.z * 1.5f) - _310) * _304) + _310) + (_355 * _298.z)) * 0.20000000298023224f) - _281) * _347) + _281)) * 0.1593017578125f);
  float4 _436 = t3.Sample(s3, float3(((exp2(log2(((_403 * 18.8515625f) + 0.8359375f) / ((_403 * 18.6875f) + 1.0f)) * 78.84375f) * 0.9696969985961914f) + 0.01515151560306549f), ((exp2(log2(((_404 * 18.8515625f) + 0.8359375f) / ((_404 * 18.6875f) + 1.0f)) * 78.84375f) * 0.9696969985961914f) + 0.01515151560306549f), ((exp2(log2(((_405 * 18.8515625f) + 0.8359375f) / ((_405 * 18.6875f) + 1.0f)) * 78.84375f) * 0.9696969985961914f) + 0.01515151560306549f)));
  float4 _649 = t8.Sample(s8, float2(TEXCOORD.x, TEXCOORD.y));
  if (!RENODX_FIX_COLOR) {
    float _448 = (pow(_436.x, 0.012683313339948654f));
    float _449 = (pow(_436.y, 0.012683313339948654f));
    float _450 = (pow(_436.z, 0.012683313339948654f));
    float _478 = (exp2(log2(max((_448 + -0.8359375f), 0.0f) / (18.8515625f - (_448 * 18.6875f))) * 6.277394771575928f) * 10000.0f) / cb0_034x;
    float _479 = (exp2(log2(max((_449 + -0.8359375f), 0.0f) / (18.8515625f - (_449 * 18.6875f))) * 6.277394771575928f) * 10000.0f) / cb0_034x;
    float _480 = (exp2(log2(max((_450 + -0.8359375f), 0.0f) / (18.8515625f - (_450 * 18.6875f))) * 6.277394771575928f) * 10000.0f) / cb0_034x;
    float _483 = mad(_480, -0.07283999770879745f, mad(_479, -0.5876560211181641f, (_478 * 1.6604959964752197f)));
    float _486 = mad(_480, -0.00834800023585558f, mad(_479, 1.1328949928283691f, (_478 * -0.12454699724912643f)));
    float _489 = mad(_480, 1.118751049041748f, mad(_479, -0.10059700161218643f, (_478 * -0.018154000863432884f)));
    float _511 = select((_483 <= 0.0031308000907301903f), (_483 * 12.920000076293945f), (((pow(_483, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f));
    float _512 = select((_486 <= 0.0031308000907301903f), (_486 * 12.920000076293945f), (((pow(_486, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f));
    float _513 = select((_489 <= 0.0031308000907301903f), (_489 * 12.920000076293945f), (((pow(_489, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f));
    float _517 = cb0_016x * 0.0009765625f;
    float _521 = frac(abs(_517));
    float _527 = frac(TEXCOORD.x * 5.39870023727417f);
    float _528 = frac(TEXCOORD.y * 5.4421000480651855f);
    float _529 = frac(select((_517 >= (-0.0f - _517)), _521, (-0.0f - _521)) * 7103.59033203125f);
    float _533 = dot(float3(_528, _529, _527), float3((_527 + 21.53510093688965f), (_528 + 14.313699722290039f), (_529 + 15.324700355529785f)));
    float _534 = _533 + _527;
    float _535 = _533 + _528;
    float _536 = _533 + _529;
    float _537 = _534 * _535;
    float _549 = frac(_537 * 97.59010314941406f) + -0.5f;
    float _550 = frac((_536 * 93.83689880371094f) * _534) + -0.5f;
    float _576 = (((frac(_537 * 95.43070220947266f) + -0.5f) + ((select((_511 < 0.0019607844296842813f), 0.0f, 1.0f) * select((_511 > 0.998039186000824f), 0.0f, 1.0f)) * _549)) * 0.003921568859368563f) + _511;
    float _577 = ((((select((_512 < 0.0019607844296842813f), 0.0f, 1.0f) * select((_512 > 0.998039186000824f), 0.0f, 1.0f)) * _550) + _549) * 0.003921568859368563f) + _512;
    float _578 = ((((select((_513 < 0.0019607844296842813f), 0.0f, 1.0f) * select((_513 > 0.998039186000824f), 0.0f, 1.0f)) * (frac((_536 * 91.69309997558594f) * _535) + -0.5f)) + _550) * 0.003921568859368563f) + _513;
    float _600 = select((_576 <= 0.0392800010740757f), (_576 * 0.07739938050508499f), exp2(log2((_576 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
    float _601 = select((_577 <= 0.0392800010740757f), (_577 * 0.07739938050508499f), exp2(log2((_577 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
    float _602 = select((_578 <= 0.0392800010740757f), (_578 * 0.07739938050508499f), exp2(log2((_578 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
    float _612 = cb0_034x * 9.999999747378752e-05f;
    float _622 = exp2(log2(mad(0.04331360012292862f, _602, mad(0.3292819857597351f, _601, (_600 * 0.627403974533081f))) * _612) * 0.1593017578125f);
    float _623 = exp2(log2(mad(0.012477199546992779f, _602, mad(0.9417769908905029f, _601, (_600 * 0.045745600014925f))) * _612) * 0.1593017578125f);
    float _624 = exp2(log2(mad(0.9836069941520691f, _602, mad(0.017604099586606026f, _601, (_600 * -0.0012105499627068639f))) * _612) * 0.1593017578125f);
    float _646 = exp2(log2(((_622 * 18.8515625f) + 0.8359375f) / ((_622 * 18.6875f) + 1.0f)) * 78.84375f);
    float _647 = exp2(log2(((_623 * 18.8515625f) + 0.8359375f) / ((_623 * 18.6875f) + 1.0f)) * 78.84375f);
    float _648 = exp2(log2(((_624 * 18.8515625f) + 0.8359375f) / ((_624 * 18.6875f) + 1.0f)) * 78.84375f);
    float _805;
    float _806;
    float _807;
    [branch]
    if (!(_649.w < 9.999999747378752e-05f)) {
      float _658 = cb0_034x * 9.999999747378752e-05f;
      float _665 = (pow(_646, 0.012683313339948654f));
      float _666 = (pow(_647, 0.012683313339948654f));
      float _667 = (pow(_648, 0.012683313339948654f));
      float _692 = exp2(log2(max((_665 + -0.8359375f), 0.0f) / (18.8515625f - (_665 * 18.6875f))) * 6.277394771575928f) / _658;
      float _693 = exp2(log2(max((_666 + -0.8359375f), 0.0f) / (18.8515625f - (_666 * 18.6875f))) * 6.277394771575928f) / _658;
      float _694 = exp2(log2(max((_667 + -0.8359375f), 0.0f) / (18.8515625f - (_667 * 18.6875f))) * 6.277394771575928f) / _658;
      float _697 = mad(_694, -0.07283999770879745f, mad(_693, -0.5876560211181641f, (_692 * 1.6604959964752197f)));
      float _700 = mad(_694, -0.00834800023585558f, mad(_693, 1.1328949928283691f, (_692 * -0.12454699724912643f)));
      float _703 = mad(_694, 1.118751049041748f, mad(_693, -0.10059700161218643f, (_692 * -0.018154000863432884f)));
      float _728 = 1.0f - _649.w;
      float _732 = (select((_697 <= 0.0031308000907301903f), (_697 * 12.920000076293945f), (((pow(_697, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f)) * _728) + _649.x;
      float _733 = (select((_700 <= 0.0031308000907301903f), (_700 * 12.920000076293945f), (((pow(_700, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f)) * _728) + _649.y;
      float _734 = (select((_703 <= 0.0031308000907301903f), (_703 * 12.920000076293945f), (((pow(_703, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f)) * _728) + _649.z;
      float _756 = select((_732 <= 0.0392800010740757f), (_732 * 0.07739938050508499f), exp2(log2((_732 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
      float _757 = select((_733 <= 0.0392800010740757f), (_733 * 0.07739938050508499f), exp2(log2((_733 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
      float _758 = select((_734 <= 0.0392800010740757f), (_734 * 0.07739938050508499f), exp2(log2((_734 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
      float _777 = exp2(log2(mad(0.04331360012292862f, _758, mad(0.3292819857597351f, _757, (_756 * 0.627403974533081f))) * _658) * 0.1593017578125f);
      float _778 = exp2(log2(mad(0.012477199546992779f, _758, mad(0.9417769908905029f, _757, (_756 * 0.045745600014925f))) * _658) * 0.1593017578125f);
      float _779 = exp2(log2(mad(0.9836069941520691f, _758, mad(0.017604099586606026f, _757, (_756 * -0.0012105499627068639f))) * _658) * 0.1593017578125f);
      _805 = exp2(log2(((_777 * 18.8515625f) + 0.8359375f) / ((_777 * 18.6875f) + 1.0f)) * 78.84375f);
      _806 = exp2(log2(((_778 * 18.8515625f) + 0.8359375f) / ((_778 * 18.6875f) + 1.0f)) * 78.84375f);
      _807 = exp2(log2(((_779 * 18.8515625f) + 0.8359375f) / ((_779 * 18.6875f) + 1.0f)) * 78.84375f);
    } else {
      _805 = _646;
      _806 = _647;
      _807 = _648;
    }
    SV_Target.x = _805;
    SV_Target.y = _806;
    SV_Target.z = _807;
  } else {
    SV_Target.rgb = BlendUI(_649, ApplyDitheringAndFilmGrain(_436.rgb, TEXCOORD.xy));
  }
  SV_Target.w = dot(_436.rgb, float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
  return SV_Target;
}
