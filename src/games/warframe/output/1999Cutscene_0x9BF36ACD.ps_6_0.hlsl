#include "../common.hlsl"
#include "../shared.h"

Texture2D<float4> t0 : register(t0);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t2 : register(t2);

Texture3D<float4> t3 : register(t3);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t7 : register(t7);

Texture2D<float4> t10 : register(t10);

Texture2D<float4> t8 : register(t8);

cbuffer cb0 : register(b0) {
  float cb0_000z : packoffset(c000.z);
  float cb0_000w : packoffset(c000.w);
  float cb0_001x : packoffset(c001.x);
  float cb0_001y : packoffset(c001.y);
  float cb0_001z : packoffset(c001.z);
  float cb0_002x : packoffset(c002.x);
  float cb0_002y : packoffset(c002.y);
  float cb0_002z : packoffset(c002.z);
  float cb0_002w : packoffset(c002.w);
  float cb0_003x : packoffset(c003.x);
  float cb0_004x : packoffset(c004.x);
  float cb0_007x : packoffset(c007.x);
  float cb0_009x : packoffset(c009.x);
  float cb0_009y : packoffset(c009.y);
  float cb0_010x : packoffset(c010.x);
  float cb0_010y : packoffset(c010.y);
  float cb0_014x : packoffset(c014.x);
  float cb0_014y : packoffset(c014.y);
  float cb0_015x : packoffset(c015.x);
  float cb0_016x : packoffset(c016.x);
};

SamplerState s0 : register(s0);

SamplerState s1 : register(s1);

SamplerState s2 : register(s2);

SamplerState s3 : register(s3);

SamplerState s4 : register(s4);

SamplerState s7 : register(s7);

SamplerState s10 : register(s10);

SamplerState s8 : register(s8);

float4 main(
  noperspective float4 SV_Position : SV_Position,
  linear float4 TEXCOORD : TEXCOORD,
  linear float4 TEXCOORD_1 : TEXCOORD1
) : SV_Target {
  float4 SV_Target;
  float _27 = cb0_014x * TEXCOORD.x;
  float _28 = cb0_014y * TEXCOORD.y;
  float _29 = min(_27, cb0_009x);
  float _30 = min(_28, cb0_009y);
  float4 _31 = t10.SampleLevel(s10, float2(_29, _30), 0.0f);
  float4 _50 = t4.SampleLevel(s4, float2(min(_29, cb0_009x), min(_30, cb0_009y)), 0.0f);
  float _59 = ((((cb0_002x * 32.0f) * cb0_002z) * ((_31.x * 2.0f) + -1.0f)) + TEXCOORD.x) * cb0_002z;
  float _60 = (TEXCOORD.y - ((cb0_002w * cb0_002y) * ((_31.y * 64.0f) + -32.0f))) * cb0_002w;
  float4 _63 = t0.SampleLevel(s0, float2(min(_59, cb0_009x), min(_60, cb0_009y)), 0.0f);
  float _67 = TEXCOORD.x + -0.5f;
  float _68 = TEXCOORD.y + -0.5f;
  float _69 = cb0_002z * _67;
  float _70 = cb0_002w * _68;
  float _74 = sqrt((_69 * _69) + (_70 * _70));
  float _79 = ((_74 * _74) * cb0_004x * RENODX_FX_CA_STRENGTH) / _74;
  float _81 = (_69 * cb0_002x) * _79;
  float _83 = (_70 * cb0_002y) * _79;
  float4 _90 = t0.SampleLevel(s0, float2(min((_59 - _81), cb0_009x), min((_60 - _83), cb0_009y)), 0.0f);
  float4 _104 = t0.SampleLevel(s0, float2(min((_81 + _59), cb0_009x), min((_83 + _60), cb0_009y)), 0.0f);
  float _111 = (_104.x * 0.800000011920929f) + ((_90.x + _63.x) * 0.10000000149011612f);
  float _112 = ((_90.y * 0.699999988079071f) + (_63.y * 0.20000000298023224f)) + (_104.y * 0.10000000149011612f);
  float _113 = ((_90.z * 0.20000000298023224f) + (_63.z * 0.10000000149011612f)) + (_104.z * 0.699999988079071f);
  float _116 = _59 / cb0_002x;
  float _120 = _116 * cb0_002x;
  float _122 = _60 / ((1.0f / cb0_002y) * cb0_002y);
  float _124 = floor(_60 * 53.60000228881836f);
  float _130 = frac(_60 * 27.733333587646484f);
  float _144 = (floor(cb0_003x * 1234.0f) + floor(((select((fmod(_124, 2.0f) >= 1.0f), 0.009014423005282879f, -0.009014423005282879f) + _59) + (min((_130 * 2.0f), ((1.0f - _130) * 2.0f)) * 0.009014423005282879f)) * 55.46666717529297f)) * 0.015625f;
  float _146 = (floor(cb0_003x * 3543.0f) + _124) * 0.015625f;
  float _148 = frac(cb0_003x * 1236.0452880859375f);
  float _150 = (_148 * _148) * 0.10000000149011612f;
  float _152 = frac(cb0_003x * 2236.04541015625f);
  float _155 = ((_152 * _152) * 0.5f) * _152;
  float4 _156 = t7.Sample(s7, float2(_144, _146));
  float4 _159 = t7.Sample(s7, float2(_146, 0.0f));
  float _187;
  float _188;
  float _189;
  float _190;
  float _191;
  float _192;
  float _193;
  float _194;
  float _236;
  float _237;
  float _238;
  float _259;
  float _260;
  float _261;
  float _643;
  float _644;
  float _645;
  if ((bool)(_156.x < _150) || (bool)(_159.y < _155)) {
    float _166 = frac(_144) + -0.5f;
    float _167 = frac(_146) + -0.5f;
    float _168 = _166 * 0.030000001192092896f;
    float _169 = _167 * 0.030000001192092896f;
    _187 = (_168 + _120);
    _188 = (_169 + _122);
    _189 = ((_166 * 0.06000000238418579f) + _120);
    _190 = ((_167 * 0.06000000238418579f) + _122);
    _191 = ((_166 * 0.03750000149011612f) + _120);
    _192 = ((_167 * 0.03750000149011612f) + _122);
    _193 = ((cb0_007x * _168) + _27);
    _194 = ((_169 * cb0_007x) + _28);
  } else {
    _187 = _120;
    _188 = _122;
    _189 = _120;
    _190 = _122;
    _191 = _120;
    _192 = _122;
    _193 = _27;
    _194 = _28;
  }
  float _201 = cb0_002z / cb0_014x;
  float _202 = cb0_002w / cb0_014y;
  float4 _210 = t0.SampleLevel(s0, float2(min((_201 * _187), cb0_009x), min((_202 * _188), cb0_009y)), 0.0f);
  float4 _216 = t0.SampleLevel(s0, float2(min((_201 * _189), cb0_009x), min((_202 * _190), cb0_009y)), 0.0f);
  float4 _222 = t0.SampleLevel(s0, float2(min((_201 * _191), cb0_009x), min((_202 * _192), cb0_009y)), 0.0f);
  float4 _224 = t7.Sample(s7, float2(_144, _146));
  bool _226 = (_224.y < _150);
  float _227 = select(_226, _216.y, _210.x);
  float _228 = select(_226, _216.y, _222.z);
  float4 _229 = t7.Sample(s7, float2(_146, 0.0f));
  if ((_229.z * 3.5f) < _155) {
    _236 = 0.0f;
    _237 = dot(float3(_227, _216.y, _228), float3(0.20000000298023224f, 0.20000000298023224f, 0.20000000298023224f));
    _238 = 0.10000000149011612f;
  } else {
    _236 = _227;
    _237 = _216.y;
    _238 = _228;
  }
  float4 _239 = t7.Sample(s7, float2(_144, _146));
  float4 _243 = t7.Sample(s7, float2(_146, 0.0f));
  if ((bool)((_239.y * 1.5f) < _150) || (bool)((_243.y * 2.5f) < _155)) {
    float _250 = frac(_116 * 0.3333333432674408f);
    bool _253 = (_250 > 0.6660000085830688f);
    _259 = 0.0f;
    _260 = (select(_253, 0.0f, select((_250 > 0.3330000042915344f), 2.0f, 0.0f)) * _237);
    _261 = (select(_253, 3.0f, 0.0f) * _238);
  } else {
    _259 = _236;
    _260 = _237;
    _261 = _238;
  }
  float _268 = ((_259 - _111) * cb0_007x) + _111;
  float _269 = ((_260 - _112) * cb0_007x) + _112;
  float _270 = ((_261 - _113) * cb0_007x) + _113;
  float _274 = min(_193, cb0_010x);
  float _275 = min(_194, cb0_010y);
  float4 _276 = t2.SampleLevel(s2, float2(_274, _275), 0.0f);
  float4 _287 = t2.SampleLevel(s2, float2(min((_193 - _81), cb0_010x), min((_194 - _83), cb0_010y)), 0.0f);
  float4 _299 = t2.SampleLevel(s2, float2(min((_193 + _81), cb0_010x), min((_194 + _83), cb0_010y)), 0.0f);
  float _320 = _67 * 3.555555582046509f;
  float _321 = _68 * 3.555555582046509f;
  float _324 = sqrt(dot(float2(_320, _321), float2(_320, _321))) * 0.25f * RENODX_FX_VIGNETTE_STRENGTH;
  float _326 = (_324 * _324) + 1.0f;
  float _329 = (1.0f / (_326 * _326)) * TEXCOORD_1.w;
  float _330 = ((((((_287.x + _276.x) * 0.10000000149011612f) - _268) + (_299.x * 0.800000011920929f)) * _276.w) + _268) * _329;
  float _331 = ((((((_276.y * 0.20000000298023224f) - _269) + (_287.y * 0.699999988079071f)) + (_299.y * 0.10000000149011612f)) * _276.w) + _269) * _329;
  float _332 = ((((((_276.z * 0.10000000149011612f) - _270) + (_287.z * 0.20000000298023224f)) + (_299.z * 0.699999988079071f)) * _276.w) + _270) * _329;
  float4 _333 = t1.SampleLevel(s1, float2(_274, _275), 0.0f);
  float _344 = saturate(((cb0_000w / (_50.x - cb0_000z)) + -500.0f) * 0.0020000000949949026f) * 0.22499999403953552f;
  float _372 = exp2(log2(((saturate(cb0_001x + _344) * ((_333.x * 0.20000000298023224f) - _330)) + _330) * 0.009999999776482582f) * 0.1593017578125f);
  float _373 = exp2(log2(((saturate(cb0_001y + _344) * ((_333.y * 0.20000000298023224f) - _331)) + _331) * 0.009999999776482582f) * 0.1593017578125f);
  float _374 = exp2(log2(((saturate(cb0_001z + _344) * ((_333.z * 0.20000000298023224f) - _332)) + _332) * 0.009999999776482582f) * 0.1593017578125f);
  float4 _405 = t3.Sample(s3, float3(((exp2(log2(((_372 * 18.8515625f) + 0.8359375f) / ((_372 * 18.6875f) + 1.0f)) * 78.84375f) * 0.96875f) + 0.015625f), ((exp2(log2(((_373 * 18.8515625f) + 0.8359375f) / ((_373 * 18.6875f) + 1.0f)) * 78.84375f) * 0.96875f) + 0.015625f), ((exp2(log2(((_374 * 18.8515625f) + 0.8359375f) / ((_374 * 18.6875f) + 1.0f)) * 78.84375f) * 0.96875f) + 0.015625f)));
  float _409 = dot(float3(_405.x, _405.y, _405.z), float3(0.2125999927520752f, 0.7152000069618225f, 0.0722000002861023f));
  float _412 = cb0_003x * 0.0009765625f;
  float _416 = frac(abs(_412));
  float _422 = frac(TEXCOORD.x * 5.39870023727417f);
  float _423 = frac(TEXCOORD.y * 5.4421000480651855f);
  float _424 = frac(select((_412 >= (-0.0f - _412)), _416, (-0.0f - _416)) * 7103.59033203125f);
  float _428 = dot(float3(_423, _424, _422), float3((_422 + 21.53510093688965f), (_423 + 14.313699722290039f), (_424 + 15.324700355529785f)));
  float _429 = _428 + _422;
  float _430 = _428 + _423;
  float _431 = _428 + _424;
  float _432 = _429 * _430;
  float _444 = frac(_432 * 97.59010314941406f) + -0.5f;
  float _445 = frac((_431 * 93.83689880371094f) * _429) + -0.5f;
  float _446 = frac((_431 * 91.69309997558594f) * _430) + -0.5f;
  float _465 = (frac(_432 * 95.43070220947266f) + -0.5f) + ((select((_405.x < 0.0019607844296842813f), 0.0f, 1.0f) * select((_405.x > 0.998039186000824f), 0.0f, 1.0f)) * _444);
  float _466 = ((select((_405.y < 0.0019607844296842813f), 0.0f, 1.0f) * select((_405.y > 0.998039186000824f), 0.0f, 1.0f)) * _445) + _444;
  float _467 = ((select((_405.z < 0.0019607844296842813f), 0.0f, 1.0f) * select((_405.z > 0.998039186000824f), 0.0f, 1.0f)) * _446) + _445;
  float _480 = (saturate(1.0f - _409) * dot(float4(_465, _466, _467, _446), float4(0.3333333432674408f, 0.3333333432674408f, 0.3333333432674408f, 0.3333333432674408f))) * cb0_015x;
  float _484 = saturate(((_465 * 0.003921568859368563f * RENODX_FX_DITHERING_STRENGTH) + _405.x) + _480);
  float _485 = saturate(((_466 * 0.003921568859368563f * RENODX_FX_DITHERING_STRENGTH) + _405.y) + _480);
  float _486 = saturate(((_467 * 0.003921568859368563f * RENODX_FX_DITHERING_STRENGTH) + _405.z) + _480);
  float4 _487 = t8.Sample(s8, float2(TEXCOORD.x, TEXCOORD.y));
  // [branch]
  // if (!(_487.w < 9.999999747378752e-05f)) {
  //   float _496 = cb0_016x * 9.999999747378752e-05f;
  //   float _503 = (pow(_484, 0.012683313339948654f));
  //   float _504 = (pow(_485, 0.012683313339948654f));
  //   float _505 = (pow(_486, 0.012683313339948654f));
  //   float _530 = exp2(log2(max((_503 + -0.8359375f), 0.0f) / (18.8515625f - (_503 * 18.6875f))) * 6.277394771575928f) / _496;
  //   float _531 = exp2(log2(max((_504 + -0.8359375f), 0.0f) / (18.8515625f - (_504 * 18.6875f))) * 6.277394771575928f) / _496;
  //   float _532 = exp2(log2(max((_505 + -0.8359375f), 0.0f) / (18.8515625f - (_505 * 18.6875f))) * 6.277394771575928f) / _496;
  //   float _535 = mad(-0.07283999770879745f, _532, mad(-0.5876560211181641f, _531, (_530 * 1.6604959964752197f)));
  //   float _538 = mad(-0.00834800023585558f, _532, mad(1.1328949928283691f, _531, (_530 * -0.12454699724912643f)));
  //   float _541 = mad(1.118751049041748f, _532, mad(-0.10059700161218643f, _531, (_530 * -0.018154000863432884f)));
  //   float _566 = 1.0f - _487.w;
  //   float _570 = (select((_535 <= 0.0031308000907301903f), (_535 * 12.920000076293945f), (((pow(_535, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f)) * _566) + _487.x;
  //   float _571 = (select((_538 <= 0.0031308000907301903f), (_538 * 12.920000076293945f), (((pow(_538, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f)) * _566) + _487.y;
  //   float _572 = (select((_541 <= 0.0031308000907301903f), (_541 * 12.920000076293945f), (((pow(_541, 0.4166666567325592f)) * 1.0549999475479126f) + -0.054999999701976776f)) * _566) + _487.z;
  //   float _594 = select((_570 <= 0.0392800010740757f), (_570 * 0.07739938050508499f), exp2(log2((_570 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
  //   float _595 = select((_571 <= 0.0392800010740757f), (_571 * 0.07739938050508499f), exp2(log2((_571 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
  //   float _596 = select((_572 <= 0.0392800010740757f), (_572 * 0.07739938050508499f), exp2(log2((_572 + 0.054999999701976776f) * 0.9478673338890076f) * 2.4000000953674316f));
  //   float _615 = exp2(log2(mad(0.04331360012292862f, _596, mad(0.3292819857597351f, _595, (_594 * 0.627403974533081f))) * _496) * 0.1593017578125f);
  //   float _616 = exp2(log2(mad(0.012477199546992779f, _596, mad(0.9417769908905029f, _595, (_594 * 0.045745600014925f))) * _496) * 0.1593017578125f);
  //   float _617 = exp2(log2(mad(0.9836069941520691f, _596, mad(0.017604099586606026f, _595, (_594 * -0.0012105499627068639f))) * _496) * 0.1593017578125f);
  //   _643 = exp2(log2(((_615 * 18.8515625f) + 0.8359375f) / ((_615 * 18.6875f) + 1.0f)) * 78.84375f);
  //   _644 = exp2(log2(((_616 * 18.8515625f) + 0.8359375f) / ((_616 * 18.6875f) + 1.0f)) * 78.84375f);
  //   _645 = exp2(log2(((_617 * 18.8515625f) + 0.8359375f) / ((_617 * 18.6875f) + 1.0f)) * 78.84375f);
  // } else {
  //   _643 = _484;
  //   _644 = _485;
  //   _645 = _486;
  // }
  // SV_Target.x = _643;
  // SV_Target.y = _644;
  // SV_Target.z = _645;

  SV_Target.rgb = BlendUI(_487, ApplyDitheringAndFilmGrain(_405.rgb, float3(_465, _466, _467), _480, TEXCOORD.xy));
  SV_Target.w = _409;
  return SV_Target;
}
